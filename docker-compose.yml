# docker-compose.yml - Docker setup for Go Web App
version: "3.8"

services:
  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: go-web-app-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: bs@123
      MYSQL_DATABASE: go_web_app
      MYSQL_USER: app_user
      MYSQL_PASSWORD: bs@123
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/sql:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5

  # Go Web Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-web-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=go_web_app
      - DB_USER=root
      - DB_PASSWORD=bs@123
      - APP_PORT=3000
      - APP_ENV=${APP_ENV:-development}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      # Mount source code for development hot-reload (if not production)
      - .:/app:${VOLUME_FLAG:-rw}
      - /app/vendor

  # phpMyAdmin for Database Management (Optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: go-web-app-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: bs@123
    ports:
      - "8088:80"
    depends_on:
      - mysql
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge
